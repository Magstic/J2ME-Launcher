/*
 * 資料夾視窗樣式（FolderWindowApp.css）
 * 作用：定義資料夾子視窗（獨立 BrowserWindow）的版面、標題列、內容區與網格卡片樣式。
 * 範圍：僅限資料夾視窗，不影響主視窗。與 `Desktop/Desktop.css` 保持視覺一致性。
 * 依賴：使用全域設計代幣（於 App.jsx 載入 theme.css 等），避免硬編碼色彩/陰影。
 * 關係：卡片/網格交互效果需與 `Desktop.css` 同步，避免兩處樣式漂移。
 * 注意：若需特定元件微調，請於對應元件 CSS 內局部覆寫，避免相互污染。
 */

.folder-window-app {
  width: 100vw;
  height: 100vh;
  display: flex;
  flex-direction: column;
  background: var(--background-primary);
  overflow: hidden;
  color: var(--text-primary);
}

/* 橡皮筋框選矩形樣式已移至全域 theme.css 的 .selection-rect */

/* 框選時禁用子元素指標事件，讓容器捕獲 mousemove；顯示十字準星 */
.games-grid.box-selecting * {
  pointer-events: none !important;
}

.games-grid.box-selecting {
  cursor: crosshair;
}

/* 拖拽時，讓所有被選中的項目變暗 */
.games-grid.dragging .game-card.selected {
  opacity: 0.6;
  filter: saturate(0.7);
}

/* 窗口標題欄 */
.folder-window-header {
  height: 32px;
  background: var(--titlebar-gradient);
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 0 0 0 8px;
  border-bottom: 1px solid var(--border-color);
  -webkit-app-region: drag;
  flex-shrink: 0;
}

.folder-window-title {
  display: flex;
  align-items: center;
  gap: 8px;
  color: var(--text-secondary);
  font-size: 13px;
  font-weight: 500;
  margin-left: 8px;
}

.folder-icon {
  font-size: 14px;
}

.folder-name {
  font-weight: 600;
  color: var(--text-primary);
}

.game-count {
  opacity: 0.8;
  font-size: 12px;
  color: var(--text-secondary);
}

/* 窗口控制按鈕 - 匹配主應用樣式 */
.folder-window-controls {
  display: flex;
  -webkit-app-region: no-drag; /* 控制按鈕不參與拖拽 */
}

.window-control-btn {
  width: 46px;
  height: 32px;
  border: none;
  background: none;
  color: var(--window-control-color);
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 12px;
  font-weight: normal;
  transition: all 0.15s ease;
}

.window-control-btn:hover {
  background: var(--window-control-hover-bg);
}

.window-control-btn.close:hover {
  background: var(--window-control-close-hover-bg);
  color: var(--window-control-close-hover-color);
}

.window-control-btn.minimize span {
  transform: translateY(-1px);
}

.window-control-btn.maximize span {
  font-size: 11px;
}

.window-control-btn.close span {
  font-size: 11px;
}

/* 窗口內容區域 - 完全匹配主體窗口的桌面視圖樣式 */
.folder-window-content {
  flex: 1;
  height: 100%;
  overflow: hidden; /* 隱藏父容器滾動條，由 react-window 處理 */
  position: relative;
  background: var(--background-primary);
  -webkit-app-region: no-drag;
  min-height: calc(100vh - 32px); /* 減去標題欄高度 */
}

/* 載入狀態 - 匹配主體樣式 */
.folder-window-content.loading {
  display: flex;
  align-items: center;
  justify-content: center;
}

/* loading-spinner 樣式與 @keyframes spin 已移至全域 theme.css */

/* 錯誤狀態 */
.folder-window-content.error {
  display: flex;
  align-items: center;
  justify-content: center;
}

.error-message {
  color: var(--error-color);
  font-size: 16px;
  font-weight: 500;
}

/* 空資料夾狀態 */
.empty-folder {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  height: 100%;
  color: var(--text-secondary);
}

.empty-icon {
  font-size: 64px;
  margin-bottom: 20px;
  opacity: 0.5;
}

/* 遊戲網格 - React-window 虛擬化容器 */
.games-grid {
  width: 100%;
  height: 100%; /* 填滿 folder-window-content 容器 */
  overflow: hidden; /* react-window 處理滾動 */
  position: relative;
  display: flex;
  justify-content: center; /* 讓 react-window 容器居中 */
  /* 使用 scrollbar-gutter 為滾動條預留空間，保持居中 */
  scrollbar-gutter: stable;
}

/* 資料夾窗口中的遊戲卡片樣式 - 完全匹配主體窗口桌面視圖 */
.games-grid .game-card {
  width: 120px;
  padding: 12px;
  background-color: transparent;
  border: none;
  box-shadow: none;
  transition: opacity 0.18s ease-out, transform 0.18s ease-out, background-color 0.2s ease;
  position: relative; /* 使用偽元素作為選中覆蓋層，需要建立定位上下文 */
  overflow: hidden;   /* 防止覆蓋層外溢，保持圓角一致 */
}

.games-grid .game-card:hover {
  transform: translateY(-2px);
  background-color: var(--hover-color);
  border-radius: 8px;
  box-shadow: none;
}

/* 多選：被選中的卡片樣式（匹配桌面視圖） */

/*
 * 與桌面視圖保持一致：
 * 1) 透過 ::before 偽元素繪製藍色選中覆蓋層與描邊；
 * 2) 只改變不觸發重排的屬性（opacity/transform），GPU 友好；
 * 3) 取消選中時產生「回縮 + 漸出」的優雅動態，並且不新增任何 DOM 節點。
 */
.games-grid .game-card::before {
  content: '';
  position: absolute;
  inset: 0;
  border-radius: 8px;
  background: var(--accent-color-light);
  box-shadow: 0 0 0 2px var(--accent-color-alpha);
  opacity: 0;
  transform: scale(0.965);
  transition: opacity 160ms ease-out, transform 180ms ease-out;
  pointer-events: none;
}

.games-grid .game-card.selected::before,
.games-grid .game-card.ephemeral-selected::before {
  opacity: 1;
  transform: scale(1);
}

/* 選中狀態下，將視覺交由覆蓋層處理，這裡僅保留圓角語義，避免樣式重複 */
.games-grid .game-card.selected {
  border-radius: 8px;
}

.games-grid .game-icon-container {
  width: 64px;
  height: 64px;
  margin: 0 auto 8px;
  background-color: transparent;
}

.games-grid .game-icon {
  width: 48px;
  height: 48px;
}

.games-grid .game-info {
  text-align: center;
}

.games-grid .game-name {
  font-size: 11px;
  line-height: 1.2;
  max-height: 2.4em;
  overflow: hidden;
  text-overflow: ellipsis;
  display: -webkit-box;
  -webkit-line-clamp: 2;
  line-clamp: 2;
  -webkit-box-orient: vertical;
  margin: 0;
  color: var(--text-primary);
}

/* 資料夾視圖的廠商和版本信息由 GameCard props 控制，不需要 CSS 強制隱藏 */


/* 響應式設計 - 統一斷點與桌面視圖一致 */
@media (width <= 768px) {
  .games-grid {
    grid-template-columns: repeat(auto-fill, minmax(100px, 1fr));
    gap: 16px;
    padding: 16px;
  }
  
  .games-grid .game-card {
    width: 100px;
    padding: 10px;
  }
  
  .games-grid .game-icon-container {
    width: 56px;
    height: 56px;
    margin: 0 auto 6px;
  }
  
  .games-grid .game-icon {
    width: 40px;
    height: 40px;
  }
  
  .games-grid .game-name {
    font-size: 10px;
  }
  
  .folder-window-title {
    font-size: 12px;
  }
}

@media (width <= 480px) {
  .games-grid {
    grid-template-columns: repeat(auto-fill, minmax(80px, 1fr));
    gap: 12px;
    padding: 12px;
  }
}